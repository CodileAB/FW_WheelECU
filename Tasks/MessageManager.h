/*
 * This file is autogenerated by Meddela, any modification done to this file
 * will be lost when the code is regenerated.
 */
#ifndef TASKS_MESSAGEMANAGER_H_
#define TASKS_MESSAGEMANAGER_H_

#include <stdint.h>
#include "FREERTOS/FreeRTOS.h"

extern TaskHandle_t xMessageManagerHandle;

typedef struct {
	uint32_t id;
	uint8_t data[8];
	uint32_t crc;
} Message_t;

/* Message struct typedefs */
typedef struct WheelControl_s {
	uint16_t Speed;
	uint8_t Direction;
	uint16_t Revolutions;
} WheelControl_t;

typedef struct WheelStatus_s {
	uint16_t RevolutionsPerMinute;
	uint8_t OvertemperatureShutdown;
	uint8_t CurrentLimitation;
	uint8_t OpenLoad;
	uint8_t Undervoltage;
	uint8_t ShortCircuitCode;
	uint8_t Status;
	uint8_t Direction;
	uint16_t RequestedRevolutionsPerMinute;
	uint8_t Temperature;
} WheelStatus_t;

extern void MessageManager_Send_WheelStatus(WheelStatus_t *s, uint32_t to_node);
extern void Handle_WheelControl_Received(WheelControl_t msg, uint8_t from_node_id, uint8_t to_node_id);
extern void MessageManager_PushReceivedMessage(Message_t *message);
extern void MessageManager_HandleReceivedMessage(Message_t message);
extern void MessageManager_Init(void);
extern void MessageManager_Main(void *pvParameters);

#endif /* End of TASKS_MESSAGEMANAGER_H */
